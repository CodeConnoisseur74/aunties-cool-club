*,
:after,
:before {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgba(59, 130, 246, .5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia: ;
    --tw-contain-size: ;
    --tw-contain-layout: ;
    --tw-contain-paint: ;
    --tw-contain-style:
}

::backdrop {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgba(59, 130, 246, .5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia: ;
    --tw-contain-size: ;
    --tw-contain-layout: ;
    --tw-contain-paint: ;
    --tw-contain-style:
}

/*! tailwindcss v3.4.16 | MIT License | https://tailwindcss.com*/
*,
:after,
:before {
    box-sizing: border-box;
    border: 0 solid #e5e7eb
}

:after,
:before {
    --tw-content: ""
}

:host,
html {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    font-family: ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
    font-feature-settings: normal;
    font-variation-settings: normal;
    -webkit-tap-highlight-color: transparent
}

body {
    margin: 0;
    line-height: inherit
}

hr {
    height: 0;
    color: inherit;
    border-top-width: 1px
}

abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-size: inherit;
    font-weight: inherit
}

a {
    color: inherit;
    text-decoration: inherit
}

b,
strong {
    font-weight: bolder
}

code,
kbd,
pre,
samp {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
    font-feature-settings: normal;
    font-variation-settings: normal;
    font-size: 1em
}

small {
    font-size: 80%
}

sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline
}

sub {
    bottom: -.25em
}

sup {
    top: -.5em
}

table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse
}

button,
input,
optgroup,
select,
textarea {
    font-family: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    font-size: 100%;
    font-weight: inherit;
    line-height: inherit;
    letter-spacing: inherit;
    color: inherit;
    margin: 0;
    padding: 0
}

button,
select {
    text-transform: none
}

button,
input:where([type=button]),
input:where([type=reset]),
input:where([type=submit]) {
    -webkit-appearance: button;
    background-color: transparent;
    background-image: none
}

:-moz-focusring {
    outline: auto
}

:-moz-ui-invalid {
    box-shadow: none
}

progress {
    vertical-align: baseline
}

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
    height: auto
}

[type=search] {
    -webkit-appearance: textfield;
    outline-offset: -2px
}

::-webkit-search-decoration {
    -webkit-appearance: none
}

::-webkit-file-upload-button {
    -webkit-appearance: button;
    font: inherit
}

summary {
    display: list-item
}

blockquote,
dd,
dl,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
p,
pre {
    margin: 0
}

fieldset {
    margin: 0
}

fieldset,
legend {
    padding: 0
}

menu,
ol,
ul {
    list-style: none;
    margin: 0;
    padding: 0
}

dialog {
    padding: 0
}

textarea {
    resize: vertical
}

input::-moz-placeholder,
textarea::-moz-placeholder {
    opacity: 1;
    color: #9ca3af
}

input::placeholder,
textarea::placeholder {
    opacity: 1;
    color: #9ca3af
}

[role=button],
button {
    cursor: pointer
}

:disabled {
    cursor: default
}

audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
    display: block;
    vertical-align: middle
}

img,
video {
    max-width: 100%;
    height: auto
}

[hidden]:where(:not([hidden=until-found])) {
    display: none
}

:root,
[data-theme] {
    background-color: var(--fallback-b1, oklch(var(--b1)/1));
    color: var(--fallback-bc, oklch(var(--bc)/1))
}

@supports not (color:oklch(0 0 0)) {
    :root {
        color-scheme: light;
        --fallback-p: #491eff;
        --fallback-pc: #d4dbff;
        --fallback-s: #ff41c7;
        --fallback-sc: #fff9fc;
        --fallback-a: #00cfbd;
        --fallback-ac: #00100d;
        --fallback-n: #2b3440;
        --fallback-nc: #d7dde4;
        --fallback-b1: #fff;
        --fallback-b2: #e5e6e6;
        --fallback-b3: #e5e6e6;
        --fallback-bc: #1f2937;
        --fallback-bs: #1f2937;
        --fallback-in: #00b3f0;
        --fallback-inc: #000;
        --fallback-su: #00ca92;
        --fallback-suc: #000;
        --fallback-wa: #ffc22d;
        --fallback-wac: #000;
        --fallback-er: #ff6f70;
        --fallback-erc: #000
    }

    @media (prefers-color-scheme:dark) {
        :root {
            color-scheme: dark;
            --fallback-p: #7582ff;
            --fallback-pc: #050617;
            --fallback-s: #ff71cf;
            --fallback-sc: #190211;
            --fallback-a: #00c7b5;
            --fallback-ac: #000e0c;
            --fallback-n: #2a323c;
            --fallback-nc: #a6adbb;
            --fallback-b1: #1d232a;
            --fallback-b2: #191e24;
            --fallback-b3: #15191e;
            --fallback-bc: #a6adbb;
            --fallback-bs: #989eab;
            --fallback-in: #00b3f0;
            --fallback-inc: #000;
            --fallback-su: #00ca92;
            --fallback-suc: #000;
            --fallback-wa: #ffc22d;
            --fallback-wac: #000;
            --fallback-er: #ff6f70;
            --fallback-erc: #000
        }
    }
}

html {
    -webkit-tap-highlight-color: transparent
}

[class*="icon-[tabler--"] {
    display: inline-block;
    width: 1rem;
    height: 1rem;
    background-color: currentColor;
    -webkit-mask-image: var(--svg);
    mask-image: var(--svg);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%
}

.icon-\[tabler--menu-2\] {
    --svg: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 12h16M4 18h16'/%3E%3C/svg%3E")
}

.icon-\[tabler--x\] {
    --svg: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M18 6 6 18M6 6l12 12'/%3E%3C/svg%3E")
}

:root {
    --p: 72.2105% 0.159514 342.009383;
    --bs: 4.3643% 0.01639 287.835609;
    --rounded-box: 0.5rem;
    --rounded-btn: 0.375rem;
    --rounded-tooltip: 0.25rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --pc: 14.4961% 0.03271 341.450489;
    --s: 78.2714% 0.118101 227.382405;
    --sc: 15.5203% 0.022684 229.7933;
    --a: 87.692% 0.179577 93.129943;
    --ac: 17.5629% 0.035969 93.216713;
    --n: 25.5554% 0.103537 286.507967;
    --nc: 85.0544% 0.020651 289.018745;
    --b1: 21.8216% 0.081948 287.835609;
    --b2: 19.6019% 0.074632 287.805979;
    --b3: 17.51% 0.065544 287.060017;
    --bc: 84.3408% 0.01655 289.875034;
    --in: 76.5197% 0.12273 231.831603;
    --inc: 15.4099% 0.024366 227.023126;
    --su: 86.0572% 0.115038 178.624677;
    --suc: 17.1311% 0.023264 179.851084;
    --wa: 85.531% 0.122117 93.722227;
    --wac: 16.9666% 0.023823 92.150402;
    --er: 73.7005% 0.121339 32.639257;
    --erc: 14.6931% 0.023351 33.226141
}

.container {
    width: 100%
}

@media (min-width:640px) {
    .container {
        max-width: 640px
    }
}

@media (min-width:768px) {
    .container {
        max-width: 768px
    }
}

@media (min-width:1024px) {
    .container {
        max-width: 1024px
    }
}

@media (min-width:1280px) {
    .container {
        max-width: 1280px
    }
}

@media (min-width:1536px) {
    .container {
        max-width: 1536px
    }
}

.alert {
    position: relative;
    width: 100%;
    padding: 1rem;
    font-size: 1rem;
    line-height: 1.375rem;
    border-radius: var(--rounded-box, .5rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity, 1)));
    color: var(--fallback-bc, oklch(var(--bc)/.8))
}

.avatar.placeholder>div {
    display: flex;
    align-items: center;
    justify-content: center
}

.badge {
    height: 1.5rem;
    gap: .375rem;
    padding-left: .75rem;
    padding-right: .75rem;
    text-align: center;
    font-size: .875rem;
    line-height: 1.25rem;
    font-weight: 400;
    width: -moz-fit-content;
    width: fit-content;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity, 1)))
}

.badge,
.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--rounded-btn, .375rem);
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity, 1)))
}

.btn {
    height: 2.375rem;
    min-height: 2.375rem;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    flex-wrap: wrap;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 1rem;
    line-height: 1.375rem;
    font-weight: 500;
    gap: .5rem;
    border-color: currentColor;
    border-color: oklch(var(--btn-color, var(--b2))/var(--tw-border-opacity));
    text-decoration-line: none;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    border-width: var(--border-btn, 1px);
    transition-property: color, background-color, border-color, opacity, box-shadow, transform;
    --tw-shadow: 0 2px 4px 0 var(--fallback-bs, oklch(var(--bs)/0.26));
    --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: var(--fallback-bc, oklch(var(--bc)/1));
    background-color: oklch(var(--btn-color, var(--b2))/var(--tw-bg-opacity));
    --tw-bg-opacity: 1;
    --tw-border-opacity: 1
}

.btn-disabled,
.btn:disabled,
.btn[disabled] {
    pointer-events: none
}

.btn-square {
    height: 2.375rem;
    width: 2.375rem;
    padding: 0
}

:where(.btn:is(input[type=checkbox])),
:where(.btn:is(input[type=radio])) {
    width: auto;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none
}

.btn:is(input[type=checkbox]):after,
.btn:is(input[type=radio]):after {
    --tw-content: attr(aria-label);
    content: var(--tw-content)
}

.card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, .5rem);
    border-color: var(--fallback-bc, oklch(var(--bc)/.4));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    color: var(--fallback-bc, oklch(var(--bc)/.8));
    box-shadow: var(--card-shadow, 0 2px 4px 0 oklch(var(--bs)/.26));
    border-width: var(--card-border, 0)
}

.card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.card-body {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    font-size: 1rem;
    line-height: 1.375rem;
    font-weight: 400;
    padding: var(--padding-card, 1.5rem)
}

.card-title {
    font-size: 1.5rem;
    line-height: 2rem;
    font-weight: 600;
    color: var(--fallback-bc, oklch(var(--bc)/.9))
}

.card figure {
    display: flex;
    align-items: center;
    justify-content: center
}

.card.image-full {
    display: grid
}

.card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, .5rem);
    background-image: linear-gradient(0deg, rgba(0, 0, 0, .58), rgba(0, 0, 0, .58))
}

.card.image-full:before,
.card.image-full>* {
    grid-column-start: 1;
    grid-row-start: 1
}

.card.image-full>figure img {
    height: 100%;
    -o-object-fit: cover;
    object-fit: cover
}

.card.image-full>.card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc, oklch(var(--nc)/var(--tw-text-opacity, 1)))
}

:where(.card figure>*) {
    width: 100%
}

.card-group>.card {
    flex: 1 0 0%;
    border-radius: 0;
    --card-shadow: none;
    --card-border: 0
}

.chat {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    -moz-column-gap: 1rem;
    column-gap: 1rem;
    padding-top: .25rem;
    padding-bottom: .25rem
}

.chat-bubble {
    position: relative;
    display: block;
    width: -moz-fit-content;
    width: fit-content;
    padding: .75rem;
    max-width: 90%;
    border-radius: var(--rounded-box, .5rem);
    min-height: 2.75rem;
    min-width: 2.75rem
}

.chat-bubble:before {
    position: absolute;
    bottom: 0;
    height: 1rem;
    width: 1rem;
    background-color: inherit;
    content: "";
    -webkit-mask-size: contain;
    mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-position: center;
    mask-position: center
}

.chat-receiver {
    place-items: start;
    grid-template-columns: auto 1fr
}

.chat-receiver .chat-footer,
.chat-receiver .chat-header {
    grid-column-start: 2
}

.chat-receiver .chat-avatar {
    grid-column-start: 1
}

.chat-receiver .chat-bubble {
    grid-column-start: 2;
    border-end-start-radius: 0;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    color: var(--fallback-bc, oklch(var(--bc)/.9))
}

.chat-receiver .chat-bubble:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='3' height='3'%3E%3Cpath d='M0 3h3V0c0 1-2 3-3 3'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='3' height='3'%3E%3Cpath d='M0 3h3V0c0 1-2 3-3 3'/%3E%3C/svg%3E");
    inset-inline-start: -.749rem
}

[dir=rtl] .chat-receiver .chat-bubble:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='3' height='3'%3E%3Cpath d='M0 3h3C2 3 0 1 0 0'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='3' height='3'%3E%3Cpath d='M0 3h3C2 3 0 1 0 0'/%3E%3C/svg%3E")
}

.chat-sender {
    place-items: end;
    grid-template-columns: 1fr auto
}

.chat-sender .chat-footer,
.chat-sender .chat-header {
    grid-column-start: 1
}

.chat-sender .chat-avatar {
    grid-column-start: 2
}

.chat-sender .chat-bubble {
    grid-column-start: 1;
    text-align: end;
    border-end-end-radius: 0;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p, oklch(var(--p)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-pc, oklch(var(--pc)/var(--tw-text-opacity, 1)))
}

.chat-sender .chat-bubble:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='3' height='3'%3E%3Cpath d='M0 3h3C2 3 0 1 0 0'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='3' height='3'%3E%3Cpath d='M0 3h3C2 3 0 1 0 0'/%3E%3C/svg%3E");
    inset-inline-start: 99.9%
}

[dir=rtl] .chat-sender .chat-bubble:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='3' height='3'%3E%3Cpath d='M0 3h3V0c0 1-2 3-3 3'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='3' height='3'%3E%3Cpath d='M0 3h3V0c0 1-2 3-3 3'/%3E%3C/svg%3E")
}

.footer {
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    -moz-column-gap: 1rem;
    column-gap: 1rem;
    row-gap: 2.5rem;
    color: var(--fallback-bc, oklch(var(--bc)/.8))
}

.footer,
.footer>* {
    display: grid
}

.footer>* {
    place-items: start;
    gap: .75rem
}

.footer-center {
    text-align: center
}

.footer-center,
.footer-center>* {
    place-items: center
}

@media (min-width:48rem) {
    .footer {
        grid-auto-flow: column
    }

    .footer-center {
        grid-auto-flow: row dense
    }
}

.label {
    display: flex;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    align-items: center;
    justify-content: space-between;
    padding: .25rem
}

.input,
.label {
    color: var(--fallback-bc, oklch(var(--bc)/.8))
}

.input {
    height: 2.375rem;
    width: 100%;
    flex-shrink: 1;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    padding-left: .75rem;
    padding-right: .75rem;
    font-size: 1rem;
    line-height: 1.375rem;
    font-weight: 400;
    border-radius: var(--rounded-btn, .375rem);
    border-width: 1px;
    border-color: var(--fallback-bc, oklch(var(--bc)/.4));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out
}

.input::file-selector-button {
    margin-inline-end: 1rem;
    display: inline-flex;
    height: 100%;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    padding-left: 1rem;
    padding-right: 1rem;
    text-align: center;
    font-size: .875rem;
    line-height: 1.25rem;
    line-height: 1em;
    border-start-start-radius: var(--rounded-btn, .375rem);
    border-end-start-radius: var(--rounded-btn, .375rem);
    border-width: 0;
    background-color: var(--fallback-bc, oklch(var(--bc)/.2));
    font-weight: 600;
    text-transform: uppercase;
    color: var(--fallback-bc, oklch(var(--bc)/.9));
    text-decoration-line: none
}

.input[type=number]::-webkit-inner-spin-button {
    margin-top: -.25rem;
    margin-bottom: -.25rem;
    margin-inline-end: -.25rem
}

.input[type=file] {
    padding-left: 0;
    padding-right: 0
}

.link {
    display: inline-block;
    cursor: pointer;
    text-decoration-line: underline
}

@media (hover:hover) {
    .label a:hover {
        --tw-text-opacity: 1;
        color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity, 1)))
    }

    .radio.is-valid:hover,
    .validate .radio:valid:hover {
        --tw-border-opacity: 1 !important;
        border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1))) !important
    }

    .radio.is-invalid:hover,
    .validate .radio:invalid:hover {
        --tw-border-opacity: 1 !important;
        border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1))) !important
    }

    .table tr.hover:hover,
    .table tr.hover:nth-child(2n):hover {
        background-color: var(--fallback-bc, oklch(var(--bc)/.05))
    }
}

:where(.menu li) .badge {
    justify-self: end
}

.navbar {
    display: flex;
    align-items: center;
    padding: var(--navbar-padding, .75rem 1.5rem);
    width: 100%;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}

.navbar-start {
    display: flex;
    width: 50%;
    justify-content: flex-start
}

.navbar-end {
    display: flex;
    width: 50%;
    justify-content: flex-end
}

.radio,
.radio-inset {
    flex-shrink: 0
}

.select {
    display: inline-flex;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    height: 2.375rem;
    width: 100%;
    padding-left: .75rem;
    padding-right: .75rem;
    font-size: 1rem;
    line-height: 2;
    line-height: 1.375rem;
    border-radius: var(--rounded-btn, .375rem);
    border-width: 1px;
    border-color: var(--fallback-bc, oklch(var(--bc)/.4));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    color: var(--fallback-bc, oklch(var(--bc)/.8));
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'><path fill='none' stroke='%239293AE' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");
    background-size: 1.3em;
    background-position: calc(100% - 1rem);
    background-repeat: no-repeat
}

.select[multiple] {
    height: auto
}

.select.select-floating.select-lg .select-floating-label {
    margin-inline-start: .75rem
}

.select.select-floating.select-lg .select-filled-label {
    margin-inline-start: 1rem
}

.swap {
    position: relative;
    display: inline-grid;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    place-content: center;
    cursor: pointer
}

.swap>* {
    grid-column-start: 1;
    grid-row-start: 1;
    transition-duration: .3s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-property: transform, opacity
}

.swap input {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none
}

.swap .swap-indeterminate,
.swap .swap-on,
.swap input:indeterminate~.swap-on {
    opacity: 0
}

.swap input:checked~.swap-off,
.swap input:indeterminate~.swap-off,
.swap-active .swap-off {
    opacity: 0
}

.swap input:checked~.swap-on,
.swap input:indeterminate~.swap-indeterminate,
.swap-active .swap-on {
    opacity: 1
}

.table {
    position: relative;
    width: 100%;
    border-radius: var(--rounded-box, .5rem);
    text-align: left;
    font-size: .875rem;
    line-height: 1.25rem;
    overflow-y: auto;
    overflow-x: hidden
}

.table :where(.table-pin-rows thead tr) {
    position: sticky;
    top: 0;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}

.table :where(.table-pin-rows tfoot tr) {
    position: sticky;
    bottom: 0;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}

.table :where(.table-pin-cols tr th) {
    position: sticky;
    inset-inline-end: 0;
    inset-inline-start: 0;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}

.disabled .advance-select-toggle,
.disabled.advance-select-toggle {
    pointer-events: none;
    border-width: 0;
    background-color: var(--fallback-n, oklch(var(--n)/.1));
    padding-top: .5rem;
    padding-bottom: .5rem;
    color: var(--fallback-n, oklch(var(--n)/.5))
}

.advance-select-tag:has(>.is-valid),
.validate select:has(~*>.selected)+.advance-select-toggle,
select.is-valid+.advance-select-toggle {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)))
}

.advance-select-tag:has(>.is-valid):focus,
.advance-select-tag:has(>.is-valid):focus-within,
.validate select:has(~*>.selected)+.advance-select-toggle:focus,
.validate select:has(~*>.selected)+.advance-select-toggle:focus-within,
select.is-valid+.advance-select-toggle:focus,
select.is-valid+.advance-select-toggle:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs, oklch(var(--bs)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-shadow-color: var(--fallback-su, oklch(var(--su)/0.22));
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-su, oklch(var(--su)/var(--tw-ring-opacity, 1)))
}

.validate .advance-select:has(>select:valid)~.label,
.validate .advance-select:has(>select:valid)~.label .label-text,
.validate .advance-select:has(>select:valid)~.label-text,
.validate .label-text:has(~.advance-select>select:valid),
.validate .label:has(~.advance-select>select:valid)>* {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.validate .advance-select:has(>select:invalid)~.label,
.validate .advance-select:has(>select:invalid)~.label .label-text,
.validate .advance-select:has(>select:invalid)~.label-text,
.validate .label-text:has(~*>select:invalid),
.validate .label:has(~*>select:invalid)>* {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.validate .advance-select:has(>select:valid)~*>.success-message,
.validate .advance-select:has(>select:valid)~.success-message,
.validate .label~:has(>select:valid)~*>.success-message {
    display: block
}

.validate .advance-select:has(>select:invalid)~*>.error-message,
.validate .advance-select:has(>select:invalid)~.error-message,
.validate .label~:has(>select:invalid)~*>.error-message {
    display: block
}

.alert-error {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er, oklch(var(--er)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-erc, oklch(var(--erc)/var(--tw-text-opacity, 1)))
}

.alert-soft.alert-error {
    background-color: var(--fallback-er, oklch(var(--er)/.2))
}

.alert-outline.alert-error,
.alert-soft.alert-error {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.avatar-group :where(.avatar).placeholder>div {
    border-radius: 9999px;
    border-width: 2px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-border-opacity, 1)))
}

@media (prefers-reduced-motion:no-preference) {
    .btn {
        animation: button-pop var(--animation-btn, .25s) ease-out
    }
}

.btn:active:focus,
.btn:active:hover {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, .97))
}

@supports not (color:oklch(0% 0 0)) {
    .btn {
        background-color: var(--btn-color, var(--fallback-b2));
        border-color: var(--btn-color, var(--fallback-b2))
    }

    .btn:focus-visible {
        background-color: var(--btn-color, var(--fallback-b2));
        border-color: var(--btn-color, var(--fallback-b2))
    }

    .btn-primary {
        --btn-color: var(--fallback-p)
    }

    .btn-secondary {
        --btn-color: var(--fallback-s)
    }

    .btn-error {
        --btn-color: var(--fallback-er)
    }
}

@media (hover:hover) {
    .btn:hover {
        --tw-shadow: 0 4px 6px -1px var(--fallback-bs, oklch(var(--bs)/0.2));
        --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
    }

    @supports (color:color-mix(in oklab, black, black)) {
        .btn:hover {
            background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2))/var(--tw-bg-opacity, 1)) 90%, #000);
            border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2))/var(--tw-border-opacity, 1)) 90%, #000)
        }
    }

    @supports not (color:oklch(0% 0 0)) {
        .btn:hover {
            background-color: var(--btn-color, var(--fallback-b2));
            border-color: var(--btn-color, var(--fallback-b2))
        }
    }

    .btn.glass:hover {
        --glass-opacity: 25%;
        --glass-border-opacity: 15%
    }

    .btn-soft.btn-primary:hover {
        background-color: var(--fallback-p, oklch(var(--p)/.3))
    }

    .btn-soft.btn-secondary:hover {
        background-color: var(--fallback-s, oklch(var(--s)/.3))
    }

    .btn-soft.btn-error:hover {
        background-color: var(--fallback-er, oklch(var(--er)/.3))
    }

    .btn-outline:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-border-opacity, 1)));
        background-color: var(--fallback-bc, oklch(var(--bc)/.1))
    }

    .btn-outline.btn-primary:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity, 1)));
        background-color: var(--fallback-p, oklch(var(--p)/.1))
    }

    .btn-outline.btn-secondary:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-s, oklch(var(--s)/var(--tw-border-opacity, 1)));
        background-color: var(--fallback-s, oklch(var(--s)/.1))
    }

    .btn-outline.btn-accent:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-a, oklch(var(--a)/var(--tw-border-opacity, 1)));
        background-color: var(--fallback-a, oklch(var(--a)/.1))
    }

    .btn-outline.btn-success:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)));
        background-color: var(--fallback-su, oklch(var(--su)/.1))
    }

    .btn-outline.btn-info:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-in, oklch(var(--in)/var(--tw-border-opacity, 1)));
        background-color: var(--fallback-in, oklch(var(--in)/.1))
    }

    .btn-outline.btn-warning:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-wa, oklch(var(--wa)/var(--tw-border-opacity, 1)));
        background-color: var(--fallback-wa, oklch(var(--wa)/.1))
    }

    .btn-outline.btn-error:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1)));
        background-color: var(--fallback-er, oklch(var(--er)/.1))
    }

    .btn-text.btn-primary:hover {
        background-color: var(--fallback-p, oklch(var(--p)/.1))
    }

    .btn-text.btn-secondary:hover {
        background-color: var(--fallback-s, oklch(var(--s)/.1))
    }

    .btn-text.btn-error:hover {
        background-color: var(--fallback-er, oklch(var(--er)/.1))
    }

    .btn-disabled:hover,
    .btn.disabled:hover,
    .btn:disabled:hover,
    .btn[disabled]:hover {
        opacity: .5;
        --tw-shadow: 0 0 #0000;
        --tw-shadow-colored: 0 0 #0000;
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
    }

    @supports (color:color-mix(in oklab, black, black)) {

        .btn:is(input[type=checkbox]:checked):hover,
        .btn:is(input[type=radio]:checked):hover {
            background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 90%, #000);
            border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 90%, #000)
        }
    }
}

@supports (color:color-mix(in oklab, black, black)) {
    .btn:focus-visible {
        background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2))/var(--tw-bg-opacity, 1)) 90%, #000);
        border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2))/var(--tw-border-opacity, 1)) 90%, #000)
    }
}

.btn:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 0
}

.btn-primary {
    --tw-text-opacity: 1;
    color: var(--fallback-pc, oklch(var(--pc)/var(--tw-text-opacity, 1)));
    outline-color: var(--fallback-p, oklch(var(--p)/.3))
}

@supports (color:oklch(0% 0 0)) {
    .btn-primary {
        --btn-color: var(--p)
    }

    .btn-secondary {
        --btn-color: var(--s)
    }

    .btn-error {
        --btn-color: var(--er)
    }

    .btn-gradient.btn-primary {
        --light-shade: var(--p)
    }

    .btn-gradient.btn-secondary {
        --light-shade: var(--s)
    }

    .btn-gradient.btn-error {
        --light-shade: var(--er)
    }
}

.btn-secondary {
    --tw-text-opacity: 1;
    color: var(--fallback-sc, oklch(var(--sc)/var(--tw-text-opacity, 1)));
    outline-color: var(--fallback-s, oklch(var(--s)/.3))
}

.btn-error {
    --tw-text-opacity: 1;
    color: var(--fallback-erc, oklch(var(--erc)/var(--tw-text-opacity, 1)));
    outline-color: var(--fallback-er, oklch(var(--er)/.3))
}

.btn.glass {
    outline-color: currentColor
}

.btn.glass,
.btn.glass:hover {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.btn.glass.btn-active {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%
}

.btn-soft.btn-primary {
    background-color: var(--fallback-p, oklch(var(--p)/.2));
    --tw-text-opacity: 1;
    color: var(--fallback-p, oklch(var(--p)/var(--tw-text-opacity, 1)));
    outline-color: var(--fallback-p, oklch(var(--p)/.5))
}

.btn-soft.btn-primary.btn-active {
    background-color: var(--fallback-p, oklch(var(--p)/.3))
}

.btn-soft.btn-primary:focus-visible {
    background-color: var(--fallback-p, oklch(var(--p)/.3));
    outline-color: var(--fallback-p, oklch(var(--p)/.5))
}

.btn-soft.btn-secondary {
    background-color: var(--fallback-s, oklch(var(--s)/.2));
    --tw-text-opacity: 1;
    color: var(--fallback-s, oklch(var(--s)/var(--tw-text-opacity, 1)));
    outline-color: var(--fallback-s, oklch(var(--s)/.5))
}

.btn-soft.btn-secondary.btn-active {
    background-color: var(--fallback-s, oklch(var(--s)/.3))
}

.btn-soft.btn-secondary:focus-visible {
    background-color: var(--fallback-s, oklch(var(--s)/.3));
    outline-color: var(--fallback-s, oklch(var(--s)/.5))
}

.btn-soft.btn-error {
    background-color: var(--fallback-er, oklch(var(--er)/.2));
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)));
    outline-color: var(--fallback-er, oklch(var(--er)/.5))
}

.btn-soft.btn-error.btn-active {
    background-color: var(--fallback-er, oklch(var(--er)/.3))
}

.btn-soft.btn-error:focus-visible {
    background-color: var(--fallback-er, oklch(var(--er)/.3));
    outline-color: var(--fallback-er, oklch(var(--er)/.5))
}

.btn-outline {
    border-style: solid;
    border-color: currentColor;
    background-color: transparent;
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity, 1)))
}

.btn-outline,
.btn-outline:hover {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.btn-outline.btn-active {
    --tw-border-opacity: 1;
    border-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-bc, oklch(var(--bc)/.1))
}

.btn-outline:focus-visible {
    background-color: var(--fallback-bc, oklch(var(--bc)/.1));
    outline-width: 1px;
    outline-color: currentColor
}

.btn-outline.btn-primary {
    --tw-text-opacity: 1;
    color: var(--fallback-p, oklch(var(--p)/var(--tw-text-opacity, 1)))
}

.btn-outline.btn-primary.btn-active {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-p, oklch(var(--p)/.1))
}

.btn-outline.btn-primary:focus-visible {
    background-color: var(--fallback-p, oklch(var(--p)/.1))
}

.btn-outline.btn-secondary {
    --tw-text-opacity: 1;
    color: var(--fallback-s, oklch(var(--s)/var(--tw-text-opacity, 1)))
}

.btn-outline.btn-secondary.btn-active {
    --tw-border-opacity: 1;
    border-color: var(--fallback-s, oklch(var(--s)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-s, oklch(var(--s)/.1))
}

.btn-outline.btn-secondary:focus-visible {
    background-color: var(--fallback-s, oklch(var(--s)/.1))
}

.btn-outline.btn-accent {
    --tw-text-opacity: 1;
    color: var(--fallback-a, oklch(var(--a)/var(--tw-text-opacity, 1)))
}

.btn-outline.btn-accent.btn-active {
    --tw-border-opacity: 1;
    border-color: var(--fallback-a, oklch(var(--a)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-a, oklch(var(--a)/.1))
}

.btn-outline.btn-accent:focus-visible {
    background-color: var(--fallback-a, oklch(var(--a)/.1))
}

.btn-outline.btn-success {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.btn-outline.btn-success.btn-active {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-su, oklch(var(--su)/.1))
}

.btn-outline.btn-success:focus-visible {
    background-color: var(--fallback-su, oklch(var(--su)/.1))
}

.btn-outline.btn-info {
    --tw-text-opacity: 1;
    color: var(--fallback-in, oklch(var(--in)/var(--tw-text-opacity, 1)))
}

.btn-outline.btn-info.btn-active {
    --tw-border-opacity: 1;
    border-color: var(--fallback-in, oklch(var(--in)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-in, oklch(var(--in)/.1))
}

.btn-outline.btn-info:focus-visible {
    background-color: var(--fallback-in, oklch(var(--in)/.1))
}

.btn-outline.btn-warning {
    --tw-text-opacity: 1;
    color: var(--fallback-wa, oklch(var(--wa)/var(--tw-text-opacity, 1)))
}

.btn-outline.btn-warning.btn-active {
    --tw-border-opacity: 1;
    border-color: var(--fallback-wa, oklch(var(--wa)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-wa, oklch(var(--wa)/.1))
}

.btn-outline.btn-warning:focus-visible {
    background-color: var(--fallback-wa, oklch(var(--wa)/.1))
}

.btn-outline.btn-error {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.btn-outline.btn-error.btn-active {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-er, oklch(var(--er)/.1))
}

.btn-outline.btn-error:focus-visible {
    background-color: var(--fallback-er, oklch(var(--er)/.1))
}

.btn-text.btn-primary {
    --tw-text-opacity: 1;
    color: var(--fallback-p, oklch(var(--p)/var(--tw-text-opacity, 1)))
}

.btn-text.btn-primary.btn-active {
    background-color: var(--fallback-p, oklch(var(--p)/.1))
}

.btn-text.btn-primary:focus-visible {
    background-color: var(--fallback-p, oklch(var(--p)/.1))
}

.btn-text.btn-secondary {
    --tw-text-opacity: 1;
    color: var(--fallback-s, oklch(var(--s)/var(--tw-text-opacity, 1)))
}

.btn-text.btn-secondary.btn-active {
    background-color: var(--fallback-s, oklch(var(--s)/.1))
}

.btn-text.btn-secondary:focus-visible {
    background-color: var(--fallback-s, oklch(var(--s)/.1))
}

.btn-text.btn-error {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.btn-text.btn-error.btn-active {
    background-color: var(--fallback-er, oklch(var(--er)/.1))
}

.btn-text.btn-error:focus-visible {
    background-color: var(--fallback-er, oklch(var(--er)/.1))
}

.btn-gradient.btn-primary {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-pc, oklch(var(--pc)/var(--tw-text-opacity, 1)));
    --tw-shadow-color: var(--fallback-p, oklch(var(--p)/0.26));
    --tw-shadow: var(--tw-shadow-colored)
}

.btn-gradient.btn-primary:hover {
    --tw-shadow-color: var(--fallback-p, oklch(var(--p)/0.2));
    --tw-shadow: var(--tw-shadow-colored)
}

.btn-gradient.btn-primary:focus-visible {
    outline-color: var(--fallback-p, oklch(var(--p)/.3));
    border-color: transparent
}

.btn-gradient.btn-secondary {
    --tw-border-opacity: 1;
    border-color: var(--fallback-s, oklch(var(--s)/var(--tw-border-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-sc, oklch(var(--sc)/var(--tw-text-opacity, 1)));
    --tw-shadow-color: var(--fallback-s, oklch(var(--s)/0.26));
    --tw-shadow: var(--tw-shadow-colored)
}

.btn-gradient.btn-secondary:hover {
    --tw-shadow-color: var(--fallback-s, oklch(var(--s)/0.2));
    --tw-shadow: var(--tw-shadow-colored)
}

.btn-gradient.btn-secondary:focus-visible {
    outline-color: var(--fallback-s, oklch(var(--s)/.3));
    border-color: transparent
}

.btn-gradient.btn-error {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-erc, oklch(var(--erc)/var(--tw-text-opacity, 1)));
    --tw-shadow-color: var(--fallback-er, oklch(var(--er)/0.26));
    --tw-shadow: var(--tw-shadow-colored)
}

.btn-gradient.btn-error:hover {
    --tw-shadow-color: var(--fallback-er, oklch(var(--er)/0.2));
    --tw-shadow: var(--tw-shadow-colored)
}

.btn-gradient.btn-error:focus-visible {
    outline-color: var(--fallback-er, oklch(var(--er)/.3));
    border-color: transparent
}

.btn.btn-disabled,
.btn.disabled,
.btn:disabled,
.btn[disabled] {
    pointer-events: none;
    opacity: .5;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.btn:is(input[type=checkbox]:checked),
.btn:is(input[type=radio]:checked) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity, 1)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p, oklch(var(--p)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-pc, oklch(var(--pc)/var(--tw-text-opacity, 1)))
}

.btn:is(input[type=checkbox]:checked):focus-visible,
.btn:is(input[type=radio]:checked):focus-visible {
    outline-color: var(--fallback-p, oklch(var(--p)/1))
}

@keyframes button-pop {
    0% {
        transform: scale(var(--btn-focus-scale, .98))
    }

    40% {
        transform: scale(1.02)
    }

    to {
        transform: scale(1)
    }
}

.card-body+.card-footer,
.card-header+.card-body {
    padding-top: 0
}

.card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset
}

.card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit
}

.card.image-full :where(figure) {
    overflow: hidden;
    border-radius: inherit
}

.card .alert {
    border-radius: 0
}

.card .alert:first-child {
    border-top-left-radius: var(--rounded-box, .5rem);
    border-top-right-radius: var(--rounded-box, .5rem)
}

.card .alert:last-child {
    border-bottom-right-radius: var(--rounded-box, .5rem);
    border-bottom-left-radius: var(--rounded-box, .5rem)
}

.carousel-next.disabled,
.carousel-prev.disabled {
    pointer-events: none;
    color: var(--fallback-bc, oklch(var(--bc)/.3))
}

.checkbox.disabled,
.checkbox:disabled,
.checkbox[disabled] {
    pointer-events: none;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    opacity: .4
}

.checkbox.disabled:not(checked),
.checkbox:disabled:not(checked),
.checkbox[disabled]:not(checked) {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity, 1)))
}

@keyframes checkmark {
    0% {
        background-position-y: 5px
    }

    50% {
        background-position-y: -2px
    }

    to {
        background-position-y: 0
    }
}

.validate .checkbox:valid~.label,
.validate .checkbox:valid~.label .label-text,
.validate .checkbox:valid~.label-text,
.validate .label-text:has(+* .checkbox:valid),
.validate .label-text:has(~.checkbox:valid),
.validate .label:has(+* .checkbox:valid)>*,
.validate .label:has(~.checkbox:valid)>*,
.validate :has(.checkbox:valid)~.label,
.validate :has(.checkbox:valid)~.label .label-text,
.validate :has(.checkbox:valid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.validate .checkbox:invalid~.label,
.validate .checkbox:invalid~.label .label-text,
.validate .checkbox:invalid~.label-text,
.validate .label-text:has(+* .checkbox:invalid),
.validate .label-text:has(~.checkbox:invalid),
.validate .label:has(+* .checkbox:invalid)>*,
.validate .label:has(~.checkbox:invalid)>*,
.validate :has(.checkbox:invalid)~.label,
.validate :has(.checkbox:invalid)~.label .label-text,
.validate :has(.checkbox:invalid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.nested-collapse-wrapper .collapse-toggle.open.nested-collapse,
.nested-collapse-wrapper .collapse.open.nested-collapse {
    background-color: var(--fallback-bc, oklch(var(--bc)/.1))
}

.nested-collapse-wrapper .collapse-toggle.open>.collapse-icon,
.nested-collapse-wrapper .collapse.open>.collapse-icon {
    --tw-rotate: 180deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.dropdown-item.disabled,
.dropdown-item:disabled,
.dropdown-item[disabled] {
    pointer-events: none;
    background-color: var(--fallback-n, oklch(var(--n)/.05));
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.dropdown-item>.label {
    padding-top: .25rem;
    padding-bottom: .25rem;
    font-size: 1rem;
    line-height: 1.375rem;
    color: var(--fallback-bc, oklch(var(--bc)/.8))
}

.dropdown-item>.label-text,
.label-text {
    color: var(--fallback-bc, oklch(var(--bc)/.9))
}

.label-text {
    cursor: pointer;
    font-size: .875rem;
    line-height: 1.25rem
}

input {
    background-color: transparent
}

input:focus {
    outline-width: 0;
    outline-color: transparent
}

input:focus-visible {
    outline: unset
}

.input::-moz-placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.input::placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.input:hover {
    border-color: var(--fallback-bc, oklch(var(--bc)/.6))
}

.input[type=file]:disabled {
    background-color: var(--fallback-n, oklch(var(--n)/.1))
}

.input:focus,
.input:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs, oklch(var(--bs)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-shadow-color: var(--fallback-p, oklch(var(--p)/0.22));
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-p, oklch(var(--p)/var(--tw-ring-opacity, 1)))
}

.input:-webkit-autofill,
.input:-webkit-autofill:focus {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    color: var(--fallback-bc, oklch(var(--bc)/.9))
}

.input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em
}

.input.disabled,
.input:disabled,
.input[disabled] {
    pointer-events: none;
    border-width: 0;
    border-color: var(--fallback-bc, oklch(var(--bc)/.1));
    background-color: var(--fallback-n, oklch(var(--n)/.1));
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.input::-webkit-date-and-time-value {
    text-align: inherit
}

.input.input-floating.disabled,
.input.input-floating:disabled,
.input.input-floating[disabled] {
    border-width: 1px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}

.input.input-floating.disabled~.input-floating-label,
.input.input-floating:disabled~.input-floating-label,
.input.input-floating[disabled]~.input-floating-label {
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.input.input-filled.disabled,
.input.input-filled:disabled,
.input.input-filled[disabled] {
    border-bottom-width: 1px
}

.input.input-filled.disabled~.input-filled-label,
.input.input-filled:disabled~.input-filled-label,
.input.input-filled[disabled]~.input-filled-label {
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.input.input-filled.input-sm:not(:-moz-placeholder-shown) {
    padding-top: .5rem
}

.input.input-filled.input-sm:focus,
.input.input-filled.input-sm:not(:placeholder-shown) {
    padding-top: .5rem
}

.input.input-filled.input-lg:not(:-moz-placeholder-shown),
.input.input-filled:not(:-moz-placeholder-shown) {
    padding-top: .75rem
}

.input.input-filled.input-lg:focus,
.input.input-filled.input-lg:not(:placeholder-shown),
.input.input-filled:focus,
.input.input-filled:not(:placeholder-shown) {
    padding-top: .75rem
}

.input-group:has(input.disabled),
.input-group:has(input:disabled),
.input-group:has(input[disabled]) {
    pointer-events: none;
    border-color: var(--fallback-bc, oklch(var(--bc)/.1));
    background-color: var(--fallback-n, oklch(var(--n)/.1));
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.input-group .input {
    border-width: 0;
    background-color: transparent
}

.input-group .input:focus,
.input-group .input:focus-within {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)
}

.input-group .input.disabled,
.input-group .input:disabled,
.input-group .input[disabled],
.input-group-filled .input {
    background-color: transparent
}

.input-group-filled .input {
    border-width: 0
}

.input-group-filled .input.disabled,
.input-group-filled .input:disabled,
.input-group-filled .input[disabled] {
    background-color: transparent
}

.input[type=file].input-floating::file-selector-button {
    border-inline-end-width: 1px;
    border-color: var(--fallback-bc, oklch(var(--bc)/.25));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}

.input.is-valid,
.validate .input:valid {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)))
}

.input.is-valid:focus,
.input.is-valid:focus-within,
.validate .input:valid:focus,
.validate .input:valid:focus-within {
    --tw-shadow-color: var(--fallback-su, oklch(var(--su)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-su, oklch(var(--su)/var(--tw-ring-opacity, 1)))
}

.input.is-valid.input-filled:focus,
.input.is-valid.input-filled:focus-within,
.validate .input:valid.input-filled:focus,
.validate .input:valid.input-filled:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)
}

.input.is-valid~.input-filled-label,
.input.is-valid~.input-floating-label,
.validate .input:valid~.input-filled-label,
.validate .input:valid~.input-floating-label {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.input.is-valid:focus-within~.input-filled-focused,
.input.is-valid:focus~.input-filled-focused,
.validate .input:valid:focus-within~.input-filled-focused,
.validate .input:valid:focus~.input-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su, oklch(var(--su)/var(--tw-bg-opacity, 1)))
}

.is-valid~.label,
.is-valid~.label .label-text,
.is-valid~.label-text,
.label-text:has(+* .is-valid),
.label-text:has(~.is-valid),
.label:has(+* .is-valid)>*,
.label:has(~.is-valid)>*,
.validate .input:valid~.label,
.validate .input:valid~.label .label-text,
.validate .input:valid~.label.label-text,
.validate .label-text:has(+* .input:valid),
.validate .label-text:has(~.input:valid),
.validate .label:has(+* .input:valid)>*,
.validate .label:has(~.input:valid)>*,
.validate :has(.input:valid)~.label,
.validate :has(.input:valid)~.label .label-text,
.validate :has(.input:valid)~.label-text,
:has(.is-valid)~.label,
:has(.is-valid)~.label .label-text,
:has(.is-valid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.input:focus.is-valid~.input-filled-label,
.input:focus.is-valid~.input-floating-label {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.input.is-invalid,
.validate .input:invalid {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1)))
}

.input.is-invalid:focus,
.input.is-invalid:focus-within,
.validate .input:invalid:focus,
.validate .input:invalid:focus-within {
    --tw-shadow-color: var(--fallback-er, oklch(var(--er)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-er, oklch(var(--er)/var(--tw-ring-opacity, 1)))
}

.input.is-invalid.input-filled:focus,
.input.is-invalid.input-filled:focus-within,
.validate .input:invalid.input-filled:focus,
.validate .input:invalid.input-filled:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)
}

.input.is-invalid~.input-filled-label,
.input.is-invalid~.input-floating-label,
.validate .input:invalid~.input-filled-label,
.validate .input:invalid~.input-floating-label {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.input.is-invalid:focus-within~.input-filled-focused,
.input.is-invalid:focus~.input-filled-focused,
.validate .input:invalid:focus-within~.input-filled-focused,
.validate .input:invalid:focus~.input-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er, oklch(var(--er)/var(--tw-bg-opacity, 1)))
}

.is-invalid~.label,
.is-invalid~.label .label-text,
.is-invalid~.label-text,
.label-text:has(+* .is-invalid),
.label-text:has(~.is-invalid),
.label:has(+* .is-invalid)>*,
.label:has(~.is-invalid)>*,
.validate .input:invalid~.label,
.validate .input:invalid~.label .label-text,
.validate .input:invalid~.label.label-text,
.validate .label-text:has(+* .input:invalid),
.validate .label-text:has(~.input:invalid),
.validate .label:has(+* .input:invalid)>*,
.validate .label:has(~.input:invalid)>*,
.validate :has(.input:invalid)~.label,
.validate :has(.input:invalid)~.label .label-text,
.validate :has(.input:invalid)~.label-text,
:has(.is-invalid)~.label,
:has(.is-invalid)~.label .label-text,
:has(.is-invalid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.input:focus.is-invalid~.input-filled-label,
.input:focus.is-invalid~.input-floating-label {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.validate .input:valid+*>.success-message,
.validate .input:valid~.success-message,
.validate :has(>.input:valid)>*>.success-message,
.validate :has(>.input:valid)~.success-message {
    display: block
}

.validate .input:invalid+*>.error-message,
.validate .input:invalid~.error-message,
.validate :has(>.input:invalid)>*>.error-message,
.validate :has(>.input:invalid)~.error-message {
    display: block
}

.input-group>*>.input.is-invalid,
.input-group>*>.input.is-valid,
.input-group>*>.input:invalid,
.input-group>*>.input:valid,
.input-group>.input.is-invalid,
.input-group>.input.is-valid,
.input-group>.input:invalid,
.input-group>.input:valid,
.validate .input-group>*>.input:invalid,
.validate .input-group>*>.input:valid,
.validate .input-group>.input:invalid,
.validate .input-group>.input:valid {
    border-width: 0
}

.input-group>*>.input.is-invalid:focus-within,
.input-group>*>.input.is-valid:focus-within,
.input-group>*>.input:invalid:focus-within,
.input-group>*>.input:valid:focus-within,
.input-group>.input.is-invalid:focus-within,
.input-group>.input.is-valid:focus-within,
.input-group>.input:invalid:focus-within,
.input-group>.input:valid:focus-within,
.validate .input-group>*>.input:invalid:focus-within,
.validate .input-group>*>.input:valid:focus-within,
.validate .input-group>.input:invalid:focus-within,
.validate .input-group>.input:valid:focus-within {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}

.input-group>*>.input.is-invalid:focus,
.input-group>*>.input.is-valid:focus,
.input-group>*>.input:invalid:focus,
.input-group>*>.input:valid:focus,
.input-group>.input.is-invalid:focus,
.input-group>.input.is-valid:focus,
.input-group>.input:invalid:focus,
.input-group>.input:valid:focus,
.validate .input-group>*>.input:invalid:focus,
.validate .input-group>*>.input:valid:focus,
.validate .input-group>.input:invalid:focus,
.validate .input-group>.input:valid:focus {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}

.input-group:has(.is-valid),
.validate .input-group:has(.input:valid) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)))
}

.input-group:has(.is-valid):has(:focus),
.input-group:has(.is-valid):has(:focus-within),
.validate .input-group:has(.input:valid):has(:focus),
.validate .input-group:has(.input:valid):has(:focus-within) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs, oklch(var(--bs)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-shadow-color: var(--fallback-su, oklch(var(--su)/0.22));
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-su, oklch(var(--su)/var(--tw-ring-opacity, 1)))
}

.input-group:has(.is-invalid),
.validate .input-group:has(.input:invalid) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1)))
}

.input-group:has(.is-invalid):has(:focus),
.input-group:has(.is-invalid):has(:focus-within),
.validate .input-group:has(.input:invalid):has(:focus),
.validate .input-group:has(.input:invalid):has(:focus-within) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs, oklch(var(--bs)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-shadow-color: var(--fallback-er, oklch(var(--er)/0.22));
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-er, oklch(var(--er)/var(--tw-ring-opacity, 1)))
}

.input-group-filled:has(.is-valid),
.validate .input-group-filled:has(.input:valid) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)))
}

.input-group-filled:has(.is-valid):focus-within~.input-filled-focused,
.input-group-filled:has(.is-valid):focus~.input-filled-focused,
.validate .input-group-filled:has(.input:valid):focus-within~.input-filled-focused,
.validate .input-group-filled:has(.input:valid):focus~.input-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su, oklch(var(--su)/var(--tw-bg-opacity, 1)))
}

.input-group-filled:has(.is-invalid),
.validate .input-group-filled:has(.input:invalid) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1)))
}

.input-group-filled:has(.is-invalid):focus-within~.input-filled-focused,
.input-group-filled:has(.is-invalid):focus~.input-filled-focused,
.validate .input-group-filled:has(.input:invalid):focus-within~.input-filled-focused,
.validate .input-group-filled:has(.input:invalid):focus~.input-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er, oklch(var(--er)/var(--tw-bg-opacity, 1)))
}

.join .btn {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.join>:where(:not(:first-child)):is(.btn) {
    margin-inline-start: calc(var(--border-btn)*-1)
}

@supports (color:color-mix(in oklab, black, black)) {
    @media (hover:hover) {
        .link-neutral:hover {
            color: color-mix(in oklab, var(--fallback-n, oklch(var(--n)/1)) 80%, #000)
        }
    }
}

.link-neutral {
    --tw-text-opacity: 1;
    color: var(--fallback-n, oklch(var(--n)/var(--tw-text-opacity, 1)))
}

.link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px
}

.link.disabled,
.link:disabled,
.link[disabled] {
    pointer-events: none;
    opacity: .4
}

.menu li.disabled,
.menu li:disabled,
.menu li[disabled] {
    pointer-events: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    opacity: .5
}

.mockup-phone .display {
    overflow: hidden;
    border-radius: 40px;
    margin-top: -25px
}

.mockup-browser .mockup-browser-toolbar .input {
    position: relative;
    margin-left: auto;
    margin-right: auto;
    display: block;
    height: 1.75rem;
    width: 24rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    padding-inline-start: 2rem;
    padding-top: .125rem
}

.mockup-browser .mockup-browser-toolbar .input:before {
    inset-inline-start: .5rem;
    aspect-ratio: 1/1;
    height: .75rem;
    --tw-translate-y: -50%;
    border-radius: 9999px;
    border-width: 2px;
    border-color: currentColor
}

.mockup-browser .mockup-browser-toolbar .input:after,
.mockup-browser .mockup-browser-toolbar .input:before {
    content: "";
    position: absolute;
    top: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    opacity: .6
}

.mockup-browser .mockup-browser-toolbar .input:after {
    inset-inline-start: 1.25rem;
    height: .5rem;
    --tw-translate-y: 25%;
    --tw-rotate: -45deg;
    border-radius: 9999px;
    border-width: 1px;
    border-color: currentColor
}

.pin-input.disabled,
.pin-input:disabled,
.pin-input[disabled] {
    pointer-events: none;
    border-color: var(--fallback-bc, oklch(var(--bc)/.25));
    background-color: var(--fallback-bc, oklch(var(--bc)/.05));
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.pin-input.disabled::-moz-placeholder,
.pin-input:disabled::-moz-placeholder,
.pin-input[disabled]::-moz-placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/.4));
    --tw-placeholder-opacity: 0.2
}

.pin-input.disabled::placeholder,
.pin-input:disabled::placeholder,
.pin-input[disabled]::placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/.4));
    --tw-placeholder-opacity: 0.2
}

@keyframes indeterminate-progress {
    0% {
        background-position-x: -75%
    }

    50% {
        background-position-x: 125%
    }

    to {
        background-position-x: -75%
    }
}

@keyframes progress-bar-stripes {
    0% {
        background-position-x: .75rem
    }
}

.radio {
    --basebg: var(--fallback-b1, oklch(var(--b1)/1));
    width: 1.5rem;
    height: 1.5rem;
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border-radius: 9999px;
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-n, oklch(var(--n)/var(--tw-border-opacity, 1)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}

.radio:focus {
    box-shadow: none
}

.radio:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 0;
    outline-color: var(--fallback-n, oklch(var(--n)/.3))
}

.radio:checked,
.radio[aria-checked=true] {
    --tw-border-opacity: 1;
    border-color: var(--fallback-n, oklch(var(--n)/var(--tw-border-opacity, 1)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity, 1)));
    background-image: none;
    animation: radiomark var(--animation-input, .1s) ease-out;
    box-shadow: 0 0 0 3px var(--basebg) inset, 0 0 0 3px var(--basebg) inset, var(--tw-ring-offset-shadow), var(--tw-ring-shadow)
}

.radio-inset.disabled,
.radio-inset:disabled,
.radio-inset[disabled],
.radio.disabled,
.radio:disabled,
.radio[disabled] {
    pointer-events: none;
    opacity: .4
}

.radio-inset.disabled:hover,
.radio-inset:disabled:hover,
.radio-inset[disabled]:hover,
.radio.disabled:hover,
.radio:disabled:hover,
.radio[disabled]:hover {
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)
}

@keyframes radiomark {
    0% {
        box-shadow: 0 0 0 9px var(--basebg) inset, 0 0 0 9px var(--basebg) inset
    }

    50% {
        box-shadow: 0 0 0 6px var(--basebg) inset, 0 0 0 6px var(--basebg) inset
    }

    to {
        box-shadow: 0 0 0 3px var(--basebg) inset, 0 0 0 3px var(--basebg) inset
    }
}

@keyframes radioinsetmark {
    0% {
        border-width: 2px
    }

    50% {
        border-width: 4px
    }

    to {
        border-width: 6px
    }
}

.custom-label-option .label,
.custom-option .label {
    padding: 0;
    font-size: 1rem;
    line-height: 1.375rem
}

.custom-label-option .label:first-of-type,
.custom-option .label:first-of-type {
    padding-bottom: .25rem
}

.custom-label-option .label .label-text,
.custom-option .label .label-text {
    font-weight: 500;
    color: var(--fallback-bc, oklch(var(--bc)/.9))
}

.custom-label-option:has(.radio.is-invalid),
.custom-option:has(.radio.is-invalid),
.validate .custom-label-option:has(.radio:invalid),
.validate .custom-option:has(.radio:invalid) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1)))
}

.custom-label-option:has(.radio.is-valid),
.custom-option:has(.radio.is-valid),
.validate .custom-label-option:has(.radio:valid),
.validate .custom-option:has(.radio:valid) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)))
}

.custom-option:has(.radio.is-valid):has(:checked),
.validate .custom-option:has(.radio:valid):has(:checked) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)));
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-su, oklch(var(--su)/var(--tw-ring-opacity, 1)))
}

.custom-label-option:has(.radio.is-valid),
.validate .custom-label-option:has(.radio:valid) {
    background-color: var(--fallback-su, oklch(var(--su)/.2))
}

.custom-label-option:has(.radio.is-valid):has(:checked),
.validate .custom-label-option:has(.radio:valid):has(:checked) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-su, oklch(var(--su)/.2));
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-su, oklch(var(--su)/var(--tw-ring-opacity, 1)))
}

.custom-label-option:has(.radio.is-invalid),
.validate .custom-label-option:has(.radio:invalid) {
    background-color: var(--fallback-er, oklch(var(--er)/.2))
}

.radio.is-valid,
.validate .radio:valid {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1))) !important
}

.radio.is-valid:hover,
.validate .radio:valid:hover {
    --tw-ring-color: var(--fallback-su, oklch(var(--su)/0.1)) !important
}

.radio.is-valid:focus-visible,
.validate .radio:valid:focus-visible {
    outline-color: var(--fallback-su, oklch(var(--su)/.3)) !important
}

.radio.is-valid:checked,
.radio.is-valid[aria-checked=true],
.validate .radio:valid:checked,
.validate .radio:valid[aria-checked=true] {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
    --tw-bg-opacity: 1 !important;
    background-color: var(--fallback-su, oklch(var(--su)/var(--tw-bg-opacity, 1))) !important
}

.radio.is-invalid,
.validate .radio:invalid {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1))) !important
}

.radio.is-invalid:hover,
.validate .radio:invalid:hover {
    --tw-ring-color: var(--fallback-er, oklch(var(--er)/0.1)) !important
}

.radio.is-invalid:focus-visible,
.validate .radio:invalid:focus-visible {
    outline-color: var(--fallback-er, oklch(var(--er)/.3)) !important
}

.radio.is-invalid:checked,
.radio.is-invalid[aria-checked=true],
.validate .radio:invalid:checked,
.validate .radio:invalid[aria-checked=true] {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
    --tw-bg-opacity: 1 !important;
    background-color: var(--fallback-er, oklch(var(--er)/var(--tw-bg-opacity, 1))) !important
}

.validate .label-text:has(+* .radio:valid),
.validate .label-text:has(~.radio:valid),
.validate .label:has(+* .radio:valid)>*,
.validate .label:has(~.radio:valid)>*,
.validate .radio:valid~.label,
.validate .radio:valid~.label .label-text,
.validate .radio:valid~.label-text,
.validate :has(.radio:valid)~.label,
.validate :has(.radio:valid)~.label .label-text,
.validate :has(.radio:valid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.validate .label-text:has(+* .radio:invalid),
.validate .label-text:has(~.radio:invalid),
.validate .label:has(+* .radio:invalid)>*,
.validate .label:has(~.radio:invalid)>*,
.validate .radio:invalid~.label,
.validate .radio:invalid~.label .label-text,
.validate .radio:invalid~.label-text,
.validate :has(.radio:invalid)~.label,
.validate :has(.radio:invalid)~.label .label-text,
.validate :has(.radio:invalid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.validate .radio:valid+*>.success-message,
.validate .radio:valid~.success-message,
.validate :has(>.radio:valid)>*>.success-message,
.validate :has(>.radio:valid)~.success-message {
    display: block
}

.validate .radio:invalid+*>.error-message,
.validate .radio:invalid~.error-message,
.validate :has(>.radio:invalid)>*>.error-message,
.validate :has(>.radio:invalid)~.error-message {
    display: block
}

.validate .label:has(+* .radio-inset:valid).label-text,
.validate .label:has(+* .radio-inset:valid)>*,
.validate .label:has(~.radio-inset:valid).label-text,
.validate .label:has(~.radio-inset:valid)>*,
.validate .radio-inset:valid~.label,
.validate .radio-inset:valid~.label .label-text,
.validate .radio-inset:valid~.label.label-text,
.validate :has(.radio-inset:valid)~.label,
.validate :has(.radio-inset:valid)~.label .label-text,
.validate :has(.radio-inset:valid)~.label.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.validate .label-text:has(+* .radio-inset:invalid),
.validate .label-text:has(~.radio-inset:invalid),
.validate .label:has(+* .radio-inset:invalid)>*,
.validate .label:has(~.radio-inset:invalid)>*,
.validate .radio-inset:invalid~.label,
.validate .radio-inset:invalid~.label .label-text,
.validate .radio-inset:invalid~.label-text,
.validate :has(.radio-inset:invalid)~.label,
.validate :has(.radio-inset:invalid)~.label .label-text,
.validate :has(.radio-inset:invalid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.range.disabled,
.range:disabled,
.range[disabled] {
    pointer-events: none;
    opacity: .3
}

.select:hover {
    border-color: var(--fallback-bc, oklch(var(--bc)/.6))
}

.select:focus,
.select:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs, oklch(var(--bs)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-shadow-color: var(--fallback-p, oklch(var(--p)/0.22));
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-p, oklch(var(--p)/var(--tw-ring-opacity, 1)))
}

.select:focus-within~.select-filled-label,
.select:focus-within~.select-floating-label,
.select:focus~.select-filled-label,
.select:focus~.select-floating-label {
    --tw-text-opacity: 1;
    color: var(--fallback-p, oklch(var(--p)/var(--tw-text-opacity, 1)))
}

.select:focus-within.is-valid~.select-filled-label,
.select:focus-within.is-valid~.select-floating-label,
.select:focus.is-valid~.select-filled-label,
.select:focus.is-valid~.select-floating-label {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.select:focus-within.is-invalid~.select-filled-label,
.select:focus-within.is-invalid~.select-floating-label,
.select:focus.is-invalid~.select-filled-label,
.select:focus.is-invalid~.select-floating-label {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.select:focus-visible {
    outline: unset
}

.select.disabled,
.select:disabled,
.select[disabled] {
    pointer-events: none;
    border-width: 0;
    border-color: var(--fallback-bc, oklch(var(--bc)/.1));
    background-color: var(--fallback-n, oklch(var(--n)/.1));
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.select.disabled::-moz-placeholder,
.select:disabled::-moz-placeholder,
.select[disabled]::-moz-placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.select.disabled::placeholder,
.select:disabled::placeholder,
.select[disabled]::placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.select-multiple,
.select[multiple],
.select[size].select:not([size="1"]) {
    overflow-y: auto;
    overflow-x: hidden;
    background-image: none
}

.select-multiple::-webkit-scrollbar-thumb,
.select[multiple]::-webkit-scrollbar-thumb,
.select[size].select:not([size="1"])::-webkit-scrollbar-thumb {
    border-radius: 9999px;
    background-color: var(--fallback-s, oklch(var(--s)/.5))
}

.select-multiple::-webkit-scrollbar-thumb:hover,
.select[multiple]::-webkit-scrollbar-thumb:hover,
.select[size].select:not([size="1"])::-webkit-scrollbar-thumb:hover {
    background-color: var(--fallback-s, oklch(var(--s)/.8))
}

.select-multiple::-webkit-scrollbar-track,
.select[multiple]::-webkit-scrollbar-track,
.select[size].select:not([size="1"])::-webkit-scrollbar-track {
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity, 1)))
}

.select-multiple::-webkit-scrollbar,
.select[multiple]::-webkit-scrollbar,
.select[size].select:not([size="1"])::-webkit-scrollbar {
    width: .5rem
}

.select.select-floating.disabled,
.select.select-floating:disabled,
.select.select-floating[disabled] {
    border-width: 1px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}

.select.select-floating.disabled~.select-floating-label,
.select.select-floating:disabled~.select-floating-label,
.select.select-floating[disabled]~.select-floating-label {
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.select.select-filled.disabled,
.select.select-filled:disabled,
.select.select-filled[disabled] {
    border-bottom-width: 1px
}

.select.select-filled.disabled~.select-filled-label,
.select.select-filled:disabled~.select-filled-label,
.select.select-filled[disabled]~.select-filled-label {
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

[dir=rtl] .select {
    background-position: 1.3em
}

.select.select-filled.select-lg~.select-filled-label,
.select.select-floating.select-lg~.select-floating-label {
    font-size: .875rem;
    line-height: 1.25rem
}

.input-group .select {
    border-width: 0
}

.input-group .select:focus,
.input-group .select:focus-within {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)
}

.select.is-valid,
.validate .select:valid {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)))
}

.select.is-valid:focus,
.select.is-valid:focus-within,
.validate .select:valid:focus,
.validate .select:valid:focus-within {
    --tw-shadow-color: var(--fallback-su, oklch(var(--su)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-su, oklch(var(--su)/var(--tw-ring-opacity, 1)))
}

.select.is-valid.select-filled:focus,
.select.is-valid.select-filled:focus-within,
.validate .select:valid.select-filled:focus,
.validate .select:valid.select-filled:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su, oklch(var(--su)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)
}

.select.is-valid~.select-filled-label,
.select.is-valid~.select-floating-label,
.validate .select:valid~.select-filled-label,
.validate .select:valid~.select-floating-label {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.select.is-valid:focus-within~.select-filled-focused,
.select.is-valid:focus~.select-filled-focused,
.validate .select:valid:focus-within~.select-filled-focused,
.validate .select:valid:focus~.select-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su, oklch(var(--su)/var(--tw-bg-opacity, 1)))
}

.select:focus.is-valid~.select-filled-label,
.select:focus.is-valid~.select-floating-label,
.validate .select:focus:is-valid~.select-filled-label,
.validate .select:focus:is-valid~.select-floating-label {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.select:focus.is-invalid~.select-filled-label,
.select:focus.is-invalid~.select-floating-label,
.validate .select:focus:is-invalid~.select-filled-label,
.validate .select:focus:is-invalid~.select-floating-label {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.select.is-invalid,
.validate .select:invalid {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1)))
}

.select.is-invalid:focus,
.select.is-invalid:focus-within,
.validate .select:invalid:focus,
.validate .select:invalid:focus-within {
    --tw-shadow-color: var(--fallback-er, oklch(var(--er)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-er, oklch(var(--er)/var(--tw-ring-opacity, 1)))
}

.select.is-invalid.select-filled:focus,
.select.is-invalid.select-filled:focus-within,
.validate .select:invalid.select-filled:focus,
.validate .select:invalid.select-filled:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er, oklch(var(--er)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)
}

.select.is-invalid~.select-filled-label,
.select.is-invalid~.select-floating-label,
.validate .select:invalid~.select-filled-label,
.validate .select:invalid~.select-floating-label {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.select.is-invalid:focus-within~.select-filled-focused,
.select.is-invalid:focus~.select-filled-focused,
.validate .select:invalid:focus-within~.select-filled-focused,
.validate .select:invalid:focus~.select-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er, oklch(var(--er)/var(--tw-bg-opacity, 1)))
}

.validate .label-text:has(+* .select:valid),
.validate .label-text:has(~.select:valid).label-text,
.validate .label:has(+* .select:valid)>*,
.validate .label:has(~.select:valid)>*,
.validate .select:valid~.label,
.validate .select:valid~.label .label-text,
.validate .select:valid~.label-text,
.validate :has(.select:valid)~.label,
.validate :has(.select:valid)~.label .label-text,
.validate :has(.select:valid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.validate .label-text:has(+* .select:invalid),
.validate .label-text:has(~.select:invalid),
.validate .label:has(+* .select:invalid)>*,
.validate .label:has(~.select:invalid)>*,
.validate .select:invalid~.label,
.validate .select:invalid~.label .label-text,
.validate .select:invalid~.label-text,
.validate :has(.select:invalid)~.label,
.validate :has(.select:invalid)~.label .label-text,
.validate :has(.select:invalid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.validate .select:valid+*>.success-message,
.validate .select:valid~.success-message,
.validate :has(>.select:valid)>*>.success-message,
.validate :has(>.select:valid)~.success-message {
    display: block
}

.validate .select:invalid+*>.error-message,
.validate .select:invalid~.error-message,
.validate :has(>.select:invalid)>*>.error-message,
.validate :has(>.select:invalid)~.error-message {
    display: block
}

@keyframes skeleton {
    0% {
        background-position: 150%
    }

    to {
        background-position: -50%
    }
}

.switch.disabled,
.switch:disabled,
.switch[disabled] {
    pointer-events: none;
    background-color: transparent;
    opacity: .4
}

.switch-outline.disabled,
.switch-outline:disabled,
.switch-outline[disabled] {
    pointer-events: none;
    border-color: currentColor;
    background-color: transparent;
    opacity: .3;
    --switchhandleborder: 0 0 0 3px var(--fallback-bc, oklch(var(--bc)/1)) inset, var(--handleoffsetcalculator) 0 0 3px var(--fallback-bc, oklch(var(--bc)/1)) inset
}

.validate .label-text:has(+* .switch:valid),
.validate .label-text:has(~.switch:valid),
.validate .label:has(+* .switch:valid)>*,
.validate .label:has(~.switch:valid)>*,
.validate .switch:valid~.label,
.validate .switch:valid~.label .label-text,
.validate .switch:valid~.label-text,
.validate :has(.switch:valid)~.label,
.validate :has(.switch:valid)~.label .label-text,
.validate :has(.switch:valid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.validate .label-text:has(+* .switch:invalid),
.validate .label-text:has(~.switch:invalid),
.validate .label:has(+* .switch:invalid)>*,
.validate .label:has(~.switch:invalid)>*,
.validate .switch:invalid~.label,
.validate .switch:invalid~.label .label-text,
.validate .switch:invalid~.label-text,
.validate :has(.switch:invalid)~.label,
.validate :has(.switch:invalid)~.label .label-text,
.validate :has(.switch:invalid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.validate .label-text:has(+* .switch-outline:valid),
.validate .label-text:has(~.switch-outline:valid),
.validate .label:has(+* .switch-outline:valid)>*,
.validate .label:has(~.switch-outline:valid)>*,
.validate .switch-outline:valid~.label,
.validate .switch-outline:valid~.label .label-text,
.validate .switch-outline:valid~.label-text,
.validate :has(.switch-outline:valid)~.label,
.validate :has(.switch-outline:valid)~.label .label-text,
.validate :has(.switch-outline:valid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.validate .label-text:has(+* .switch-outline:invalid),
.validate .label-text:has(~.switch-outline:invalid),
.validate .label:has(+* .switch-outline:invalid)>*,
.validate .label:has(~.switch-outline:invalid)>*,
.validate .switch-outline:invalid~.label,
.validate .switch-outline:invalid~.label .label-text,
.validate .switch-outline:invalid~.label-text,
.validate :has(.switch-outline:invalid)~.label,
.validate :has(.switch-outline:invalid)~.label .label-text,
.validate :has(.switch-outline:invalid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.table:where([dir=rtl], [dir=rtl] *) {
    text-align: right
}

.table::-webkit-scrollbar-thumb {
    background-color: var(--fallback-s, oklch(var(--s)/.5))
}

.table::-webkit-scrollbar-thumb:hover {
    background-color: var(--fallback-s, oklch(var(--s)/.8))
}

.table::-webkit-scrollbar-track {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity, 1)))
}

.table::-webkit-scrollbar {
    width: .5rem
}

.table :where(th, td) {
    text-wrap: nowrap;
    padding: .55rem 1.25rem;
    vertical-align: middle;
    font-size: 1rem;
    line-height: 1.375rem
}

.table :where(th) {
    text-wrap: nowrap;
    font-size: .875rem;
    line-height: 1.25rem;
    font-weight: 500;
    text-transform: uppercase;
    color: var(--fallback-bc, oklch(var(--bc)/.9));
    letter-spacing: 1px
}

.table tr.active,
.table tr.active:nth-child(2n),
.table-striped tbody tr:nth-child(2n) {
    background-color: var(--fallback-bc, oklch(var(--bc)/.1))
}

.table :where(thead, tbody) :where(tr:first-child:last-child),
.table :where(thead, tbody) :where(tr:not(:last-child)) {
    border-bottom-width: 1px;
    border-color: var(--fallback-bc, oklch(var(--bc)/.25))
}

.table :where(thead, tfoot, th) {
    white-space: nowrap;
    color: var(--fallback-bc, oklch(var(--bc)/.9))
}

textarea {
    background-color: transparent
}

textarea:focus {
    outline-width: 0;
    outline-color: transparent
}

textarea:focus-visible {
    outline: unset
}

.textarea.disabled,
.textarea:disabled,
.textarea[disabled] {
    pointer-events: none;
    border-width: 0;
    border-color: var(--fallback-bc, oklch(var(--bc)/.1));
    background-color: var(--fallback-n, oklch(var(--n)/.1));
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.textarea.textarea-floating.disabled,
.textarea.textarea-floating:disabled,
.textarea.textarea-floating[disabled] {
    border-width: 1px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}

.textarea.textarea-floating.disabled~.textarea-floating-label,
.textarea.textarea-floating:disabled~.textarea-floating-label,
.textarea.textarea-floating[disabled]~.textarea-floating-label {
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.textarea.textarea-filled.disabled,
.textarea.textarea-filled:disabled,
.textarea.textarea-filled[disabled] {
    border-bottom-width: 1px
}

.textarea.textarea-filled.disabled~.textarea-filled-label,
.textarea.textarea-filled:disabled~.textarea-filled-label,
.textarea.textarea-filled[disabled]~.textarea-filled-label {
    color: var(--fallback-bc, oklch(var(--bc)/.5))
}

.validate .label-text:has(+* .textarea:valid),
.validate .label-text:has(~.textarea:valid),
.validate .label:has(+* .textarea:valid)>*,
.validate .label:has(~.textarea:valid)>*,
.validate .textarea:valid~.label,
.validate .textarea:valid~.label .label-text,
.validate .textarea:valid~.label-text,
.validate :has(.textarea:valid)~.label,
.validate :has(.textarea:valid)~.label .label-text,
.validate :has(.textarea:valid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity, 1)))
}

.validate .label-text:has(+* .textarea:invalid),
.validate .label-text:has(~.textarea:invalid),
.validate .label:has(+* .textarea:invalid)>*,
.validate .label:has(~.textarea:invalid)>*,
.validate .textarea:invalid~.label,
.validate .textarea:invalid~.label .label-text,
.validate .textarea:invalid~.label-text,
.validate :has(.textarea:invalid)~.label,
.validate :has(.textarea:invalid)~.label .label-text,
.validate :has(.textarea:invalid)~.label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity, 1)))
}

.glass,
.glass.btn-active {
    border: none;
    -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
    backdrop-filter: blur(var(--glass-blur, 40px));
    background-color: transparent;
    background-image: linear-gradient(135deg, rgb(255 255 255/var(--glass-opacity, 30%)) 0, transparent 100%), linear-gradient(var(--glass-reflex-degree, 100deg), rgb(255 255 255/var(--glass-reflex-opacity, 10%)) 25%, transparent 25%);
    box-shadow: 0 0 0 1px rgb(255 255 255/var(--glass-border-opacity, 10%)) inset, 0 0 0 2px rgb(0 0 0/5%);
    text-shadow: 0 1px rgb(0 0 0/var(--glass-text-shadow-opacity, 5%))
}

@media (hover:hover) {
    .glass.btn-active {
        border: none;
        -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
        backdrop-filter: blur(var(--glass-blur, 40px));
        background-color: transparent;
        background-image: linear-gradient(135deg, rgb(255 255 255/var(--glass-opacity, 30%)) 0, transparent 100%), linear-gradient(var(--glass-reflex-degree, 100deg), rgb(255 255 255/var(--glass-reflex-opacity, 10%)) 25%, transparent 25%);
        box-shadow: 0 0 0 1px rgb(255 255 255/var(--glass-border-opacity, 10%)) inset, 0 0 0 2px rgb(0 0 0/5%);
        text-shadow: 0 1px rgb(0 0 0/var(--glass-text-shadow-opacity, 5%))
    }
}

.btn-sm {
    height: 1.875rem;
    min-height: 1.875rem;
    padding-left: .75rem;
    padding-right: .75rem;
    font-size: .875rem;
    line-height: 1.25rem
}

.btn-square:where(.btn-xs) {
    height: 1.5rem;
    width: 1.5rem;
    padding: 0
}

.btn-square:where(.btn-sm) {
    height: 1.875rem;
    width: 1.875rem;
    padding: 0
}

.btn-square:where(.btn-lg) {
    height: 2.875rem;
    width: 2.875rem;
    padding: 0
}

.btn-circle:where(.btn-sm) {
    height: 1.875rem;
    width: 1.875rem;
    border-radius: 9999px;
    padding: 0
}

[type=radio].radio-inset.radio-xs,
[type=radio].radio.radio-xs {
    width: 1rem;
    height: 1rem
}

[type=radio].radio-inset.radio-sm,
[type=radio].radio.radio-sm {
    width: 1.25rem;
    height: 1.25rem
}

[type=radio].radio-inset.radio-lg,
[type=radio].radio.radio-lg {
    width: 2rem;
    height: 2rem
}

.card-compact .card-header+.card-body {
    padding-top: 0
}

.card-compact .card-body {
    padding: 1rem
}

.card-compact .card-title {
    margin-bottom: .25rem
}

.static {
    position: static
}

.m-6 {
    margin: 1.5rem
}

.mx-4 {
    margin-left: 1rem;
    margin-right: 1rem
}

.mx-auto {
    margin-left: auto;
    margin-right: auto
}

.my-4 {
    margin-top: 1rem;
    margin-bottom: 1rem
}

.my-6 {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem
}

.mb-2 {
    margin-bottom: .5rem
}

.mb-4 {
    margin-bottom: 1rem
}

.mb-5 {
    margin-bottom: 1.25rem
}

.mb-6 {
    margin-bottom: 1.5rem
}

.mb-8 {
    margin-bottom: 2rem
}

.mt-10 {
    margin-top: 2.5rem
}

.mt-2 {
    margin-top: .5rem
}

.mt-4 {
    margin-top: 1rem
}

.mt-6 {
    margin-top: 1.5rem
}

.block {
    display: block
}

.inline-block {
    display: inline-block
}

.flex {
    display: flex
}

.table {
    display: table
}

.grid {
    display: grid
}

.hidden {
    display: none
}

.size-4 {
    width: 1rem;
    height: 1rem
}

.h-10 {
    height: 2.5rem
}

.h-12 {
    height: 3rem
}

.h-6 {
    height: 1.5rem
}

.h-\[50vh\] {
    height: 50vh
}

.h-full {
    height: 100%
}

.min-h-screen {
    min-height: 100vh
}

.w-1\/2 {
    width: 50%
}

.w-24 {
    width: 6rem
}

.w-32 {
    width: 8rem
}

.w-full {
    width: 100%
}

.min-w-full {
    min-width: 100%
}

.max-w-sm {
    max-width: 24rem
}

.flex-1 {
    flex: 1 1 0%
}

.border-collapse {
    border-collapse: collapse
}

.-rotate-6 {
    --tw-rotate: -6deg
}

.-rotate-6,
.transform {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.appearance-none {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none
}

.grid-flow-col {
    grid-auto-flow: column
}

.flex-col {
    flex-direction: column
}

.flex-wrap {
    flex-wrap: wrap
}

.content-center {
    align-content: center
}

.items-center {
    align-items: center
}

.justify-end {
    justify-content: flex-end
}

.justify-center {
    justify-content: center
}

.justify-between {
    justify-content: space-between
}

.gap-2 {
    gap: .5rem
}

.gap-4 {
    gap: 1rem
}

.space-x-3>:not([hidden])~:not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(.75rem*var(--tw-space-x-reverse));
    margin-left: calc(.75rem*(1 - var(--tw-space-x-reverse)))
}

.space-x-4>:not([hidden])~:not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1rem*var(--tw-space-x-reverse));
    margin-left: calc(1rem*(1 - var(--tw-space-x-reverse)))
}

.space-y-4>:not([hidden])~:not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(1rem*(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1rem*var(--tw-space-y-reverse))
}

.overflow-hidden {
    overflow: hidden
}

.overflow-y-auto {
    overflow-y: auto
}

.overflow-y-hidden {
    overflow-y: hidden
}

.rounded {
    border-radius: .25rem
}

.rounded-box {
    border-radius: var(--rounded-box, .5rem)
}

.rounded-lg {
    border-radius: .5rem
}

.rounded-md {
    border-radius: .375rem
}

.rounded-xl {
    border-radius: .75rem
}

.border {
    border-width: 1px
}

.border-blue-600 {
    --tw-border-opacity: 1;
    border-color: rgb(37 99 235/var(--tw-border-opacity, 1))
}

.border-gray-200 {
    --tw-border-opacity: 1;
    border-color: rgb(229 231 235/var(--tw-border-opacity, 1))
}

.border-gray-300 {
    --tw-border-opacity: 1;
    border-color: rgb(209 213 219/var(--tw-border-opacity, 1))
}

.bg-base-100 {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}

.bg-base-200 {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity, 1)))
}

.bg-blue-500 {
    --tw-bg-opacity: 1;
    background-color: rgb(59 130 246/var(--tw-bg-opacity, 1))
}

.bg-gray-50 {
    --tw-bg-opacity: 1;
    background-color: rgb(249 250 251/var(--tw-bg-opacity, 1))
}

.bg-gray-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(17 24 39/var(--tw-bg-opacity, 1))
}

.bg-green-500 {
    --tw-bg-opacity: 1;
    background-color: rgb(34 197 94/var(--tw-bg-opacity, 1))
}

.bg-primary {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p, oklch(var(--p)/var(--tw-bg-opacity, 1)))
}

.bg-red-500 {
    --tw-bg-opacity: 1;
    background-color: rgb(239 68 68/var(--tw-bg-opacity, 1))
}

.bg-white {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255/var(--tw-bg-opacity, 1))
}

.bg-gradient-to-r {
    background-image: linear-gradient(to right, var(--tw-gradient-stops))
}

.from-green-400 {
    --tw-gradient-from: #4ade80 var(--tw-gradient-from-position);
    --tw-gradient-to: rgba(74, 222, 128, 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
}

.from-purple-800 {
    --tw-gradient-from: #6b21a8 var(--tw-gradient-from-position);
    --tw-gradient-to: rgba(107, 33, 168, 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
}

.via-pink-500 {
    --tw-gradient-to: rgba(236, 72, 153, 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), #ec4899 var(--tw-gradient-via-position), var(--tw-gradient-to)
}

.to-green-500 {
    --tw-gradient-to: #22c55e var(--tw-gradient-to-position)
}

.to-purple-500 {
    --tw-gradient-to: #a855f7 var(--tw-gradient-to-position)
}

.bg-cover {
    background-size: cover
}

.bg-fixed {
    background-attachment: fixed
}

.bg-clip-text {
    -webkit-background-clip: text;
    background-clip: text
}

.fill-current {
    fill: currentColor
}

.p-10 {
    padding: 2.5rem
}

.p-12 {
    padding: 3rem
}

.p-2 {
    padding: .5rem
}

.p-3 {
    padding: .75rem
}

.p-6 {
    padding: 1.5rem
}

.px-3 {
    padding-left: .75rem;
    padding-right: .75rem
}

.px-4 {
    padding-left: 1rem;
    padding-right: 1rem
}

.px-5 {
    padding-left: 1.25rem;
    padding-right: 1.25rem
}

.px-8 {
    padding-left: 2rem;
    padding-right: 2rem
}

.py-10 {
    padding-top: 2.5rem;
    padding-bottom: 2.5rem
}

.py-2 {
    padding-top: .5rem;
    padding-bottom: .5rem
}

.py-3 {
    padding-top: .75rem;
    padding-bottom: .75rem
}

.pb-24 {
    padding-bottom: 6rem
}

.pb-6 {
    padding-bottom: 1.5rem
}

.pb-8 {
    padding-bottom: 2rem
}

.pr-12 {
    padding-right: 3rem
}

.pt-16 {
    padding-top: 4rem
}

.pt-24 {
    padding-top: 6rem
}

.pt-4 {
    padding-top: 1rem
}

.pt-6 {
    padding-top: 1.5rem
}

.text-center {
    text-align: center
}

.text-2xl {
    font-size: 1.5rem;
    line-height: 2rem
}

.text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem
}

.text-5xl {
    font-size: 3rem;
    line-height: 1
}

.text-base {
    font-size: 1rem;
    line-height: 1.375rem
}

.text-lg {
    font-size: 1.125rem;
    line-height: 1.5rem
}

.text-sm {
    font-size: .875rem;
    line-height: 1.25rem
}

.text-xl {
    font-size: 1.25rem;
    line-height: 1.625rem
}

.font-bold {
    font-weight: 700
}

.font-semibold {
    font-weight: 600
}

.leading-normal {
    line-height: 1.5
}

.leading-tight {
    line-height: 1.25
}

.tracking-normal {
    letter-spacing: 0
}

.text-base-content\/90 {
    color: var(--fallback-bc, oklch(var(--bc)/.9))
}

.text-black {
    --tw-text-opacity: 1;
    color: rgb(0 0 0/var(--tw-text-opacity, 1))
}

.text-blue-300 {
    --tw-text-opacity: 1;
    color: rgb(147 197 253/var(--tw-text-opacity, 1))
}

.text-blue-400 {
    --tw-text-opacity: 1;
    color: rgb(96 165 250/var(--tw-text-opacity, 1))
}

.text-blue-600 {
    --tw-text-opacity: 1;
    color: rgb(37 99 235/var(--tw-text-opacity, 1))
}

.text-gray-500 {
    --tw-text-opacity: 1;
    color: rgb(107 114 128/var(--tw-text-opacity, 1))
}

.text-gray-600 {
    --tw-text-opacity: 1;
    color: rgb(75 85 99/var(--tw-text-opacity, 1))
}

.text-gray-700 {
    --tw-text-opacity: 1;
    color: rgb(55 65 81/var(--tw-text-opacity, 1))
}

.text-indigo-400 {
    --tw-text-opacity: 1;
    color: rgb(129 140 248/var(--tw-text-opacity, 1))
}

.text-primary {
    --tw-text-opacity: 1;
    color: var(--fallback-p, oklch(var(--p)/var(--tw-text-opacity, 1)))
}

.text-primary-content {
    --tw-text-opacity: 1;
    color: var(--fallback-pc, oklch(var(--pc)/var(--tw-text-opacity, 1)))
}

.text-transparent {
    color: transparent
}

.text-white {
    --tw-text-opacity: 1;
    color: rgb(255 255 255/var(--tw-text-opacity, 1))
}

.no-underline {
    text-decoration-line: none
}

.opacity-75 {
    opacity: .75
}

.shadow {
    --tw-shadow: 0 2px 4px 0 var(--fallback-bs, oklch(var(--bs)/0.26));
    --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color)
}

.shadow,
.shadow-lg {
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.shadow-lg {
    --tw-shadow: 0 10px 15px -2px var(--fallback-bs, oklch(var(--bs)/0.34));
    --tw-shadow-colored: 0 10px 15px -2px var(--tw-shadow-color)
}

.outline {
    outline-style: solid
}

.transition {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-duration: .15s
}

.duration-300 {
    transition-duration: .3s
}

.duration-700 {
    transition-duration: .7s
}

.ease-in-out {
    transition-timing-function: cubic-bezier(.4, 0, .2, 1)
}

.hover\:rotate-6:hover {
    --tw-rotate: 6deg
}

.hover\:rotate-6:hover,
.hover\:scale-105:hover {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.hover\:scale-105:hover {
    --tw-scale-x: 1.05;
    --tw-scale-y: 1.05
}

.hover\:scale-125:hover {
    --tw-scale-x: 1.25;
    --tw-scale-y: 1.25;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.hover\:bg-blue-50:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(239 246 255/var(--tw-bg-opacity, 1))
}

.hover\:bg-blue-700:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(29 78 216/var(--tw-bg-opacity, 1))
}

.hover\:bg-gray-100:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(243 244 246/var(--tw-bg-opacity, 1))
}

.hover\:bg-green-700:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(21 128 61/var(--tw-bg-opacity, 1))
}

.hover\:bg-red-700:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(185 28 28/var(--tw-bg-opacity, 1))
}

.hover\:from-pink-500:hover {
    --tw-gradient-from: #ec4899 var(--tw-gradient-from-position);
    --tw-gradient-to: rgba(236, 72, 153, 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
}

.hover\:to-green-500:hover {
    --tw-gradient-to: #22c55e var(--tw-gradient-to-position)
}

.hover\:text-pink-500:hover {
    --tw-text-opacity: 1;
    color: rgb(236 72 153/var(--tw-text-opacity, 1))
}

.hover\:underline:hover {
    text-decoration-line: underline
}

.hover\:no-underline:hover {
    text-decoration-line: none
}

.focus\:ring:focus {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}

@media not all and (min-width:768px) {
    .max-md\:w-full {
        width: 100%
    }

    .max-md\:flex-col {
        flex-direction: column
    }
}

@media (min-width:768px) {
    .md\:hidden {
        display: none
    }

    .md\:h-auto {
        height: auto
    }

    .md\:w-4\/5 {
        width: 80%
    }

    .md\:flex-row {
        flex-direction: row
    }

    .md\:items-center {
        align-items: center
    }

    .md\:justify-start {
        justify-content: flex-start
    }

    .md\:p-4 {
        padding: 1rem
    }

    .md\:pt-16 {
        padding-top: 4rem
    }

    .md\:pt-36 {
        padding-top: 9rem
    }

    .md\:text-left {
        text-align: left
    }

    .md\:text-2xl {
        font-size: 1.5rem;
        line-height: 2rem
    }

    .md\:text-5xl {
        font-size: 3rem;
        line-height: 1
    }
}

@media (min-width:1024px) {
    .lg\:mx-auto {
        margin-left: auto;
        margin-right: auto
    }

    .lg\:w-1\/4 {
        width: 25%
    }

    .lg\:w-2\/4 {
        width: 50%
    }

    .lg\:items-start {
        align-items: flex-start
    }

    .lg\:p-20 {
        padding: 5rem
    }

    .lg\:pb-0 {
        padding-bottom: 0
    }

    .lg\:pb-6 {
        padding-bottom: 1.5rem
    }

    .lg\:text-4xl {
        font-size: 2.25rem;
        line-height: 2.5rem
    }

    .lg\:text-6xl {
        font-size: 3.75rem;
        line-height: 1
    }
}

@media (min-width:1280px) {
    .xl\:w-2\/5 {
        width: 40%
    }

    .xl\:w-3\/5 {
        width: 60%
    }
}
